
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  fullname: 'fullname',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.PatientInfoScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  gender: 'gender',
  dob: 'dob',
  phone: 'phone'
};

exports.Prisma.SpecialtyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  headDoctorId: 'headDoctorId'
};

exports.Prisma.DoctorInfoScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  gender: 'gender',
  qualification: 'qualification',
  fee: 'fee',
  specialtyId: 'specialtyId'
};

exports.Prisma.ShiftScalarFieldEnum = {
  id: 'id',
  startTime: 'startTime',
  endTime: 'endTime',
  period: 'period'
};

exports.Prisma.WorkScheduleScalarFieldEnum = {
  id: 'id',
  doctorId: 'doctorId',
  date: 'date',
  shiftId: 'shiftId',
  status: 'status'
};

exports.Prisma.AppointmentScalarFieldEnum = {
  id: 'id',
  patientId: 'patientId',
  scheduleId: 'scheduleId',
  status: 'status',
  symptom: 'symptom',
  request: 'request',
  note: 'note'
};

exports.Prisma.MedicalRecordScalarFieldEnum = {
  appointmentId: 'appointmentId',
  diagnosis: 'diagnosis',
  prescription: 'prescription',
  note: 'note'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  DOCTOR: 'DOCTOR',
  PATIENT: 'PATIENT'
};

exports.Prisma.ModelName = {
  User: 'User',
  PatientInfo: 'PatientInfo',
  Specialty: 'Specialty',
  DoctorInfo: 'DoctorInfo',
  Shift: 'Shift',
  WorkSchedule: 'WorkSchedule',
  Appointment: 'Appointment',
  MedicalRecord: 'MedicalRecord'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Admin\\OneDrive\\Desktop\\Hospital Appointment Management System\\backend\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Admin\\OneDrive\\Desktop\\Hospital Appointment Management System\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  fullname  String   @db.VarChar(50)\n  email     String   @unique @db.VarChar(50)\n  password  String   @db.VarChar(255)\n  role      Role     @default(PATIENT)\n  createdAt DateTime @default(now())\n\n  doctorInfo  DoctorInfo?\n  patinetInfo PatientInfo?\n}\n\nmodel PatientInfo {\n  id          Int           @id @default(autoincrement())\n  userId      Int           @unique\n  gender      String?       @db.Char(1)\n  dob         DateTime?\n  phone       String?       @db.VarChar(12)\n  user        User          @relation(fields: [userId], references: [id])\n  appointment Appointment[]\n}\n\nmodel Specialty {\n  id           Int     @id @default(autoincrement())\n  name         String  @db.VarChar(50)\n  description  String?\n  headDoctorId Int?    @unique\n\n  headDoctor DoctorInfo?  @relation(\"HeadDoctor\", fields: [headDoctorId], references: [id])\n  doctors    DoctorInfo[] @relation(\"SpecialtyDoctors\")\n}\n\nmodel DoctorInfo {\n  id            Int     @id @default(autoincrement())\n  userId        Int     @unique\n  gender        String? @db.Char(1)\n  qualification String? @db.VarChar(100)\n  fee           Int?\n  specialtyId   Int?\n\n  user      User           @relation(fields: [userId], references: [id])\n  specialty Specialty?     @relation(\"SpecialtyDoctors\", fields: [specialtyId], references: [id])\n  schedules WorkSchedule[]\n  headOf    Specialty?     @relation(\"HeadDoctor\")\n}\n\nmodel Shift {\n  id        Int      @id @default(autoincrement())\n  startTime DateTime @db.Time\n  endTime   DateTime @db.Time\n  period    String   @db.Char(1) // 'S' (Morning), 'C' (Afternoon)\n\n  schedules WorkSchedule[]\n}\n\nmodel WorkSchedule {\n  id       Int      @id @default(autoincrement())\n  doctorId Int\n  date     DateTime\n  shiftId  Int\n  status   Int      @default(0) //0: Free, 1: Busy, 2: Day off\n\n  doctor      DoctorInfo   @relation(fields: [doctorId], references: [id])\n  shift       Shift        @relation(fields: [shiftId], references: [id])\n  appointment Appointment?\n}\n\nmodel Appointment {\n  id         Int     @id @default(autoincrement())\n  patientId  Int\n  scheduleId Int     @unique\n  status     Int     @default(0) // 0: Booked, 1: Completed, 2: Cancelled, 3: DoctorCancelled, 4: Absent\n  symptom    String? @db.VarChar(100)\n  request    String? @db.VarChar(100)\n  note       String?\n\n  patient  PatientInfo    @relation(fields: [patientId], references: [id])\n  schedule WorkSchedule   @relation(fields: [scheduleId], references: [id])\n  record   MedicalRecord?\n}\n\nmodel MedicalRecord {\n  appointmentId Int     @id\n  diagnosis     String\n  prescription  String?\n  note          String?\n\n  appointment Appointment @relation(fields: [appointmentId], references: [id])\n}\n\nenum Role {\n  ADMIN\n  DOCTOR\n  PATIENT\n}\n",
  "inlineSchemaHash": "8c5b07323adca86ee2a18f28894e7233a50346de32dcb1a485948252c94db315",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fullname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"doctorInfo\",\"kind\":\"object\",\"type\":\"DoctorInfo\",\"relationName\":\"DoctorInfoToUser\"},{\"name\":\"patinetInfo\",\"kind\":\"object\",\"type\":\"PatientInfo\",\"relationName\":\"PatientInfoToUser\"}],\"dbName\":null},\"PatientInfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dob\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PatientInfoToUser\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToPatientInfo\"}],\"dbName\":null},\"Specialty\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"headDoctorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"headDoctor\",\"kind\":\"object\",\"type\":\"DoctorInfo\",\"relationName\":\"HeadDoctor\"},{\"name\":\"doctors\",\"kind\":\"object\",\"type\":\"DoctorInfo\",\"relationName\":\"SpecialtyDoctors\"}],\"dbName\":null},\"DoctorInfo\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"qualification\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fee\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"specialtyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DoctorInfoToUser\"},{\"name\":\"specialty\",\"kind\":\"object\",\"type\":\"Specialty\",\"relationName\":\"SpecialtyDoctors\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"WorkSchedule\",\"relationName\":\"DoctorInfoToWorkSchedule\"},{\"name\":\"headOf\",\"kind\":\"object\",\"type\":\"Specialty\",\"relationName\":\"HeadDoctor\"}],\"dbName\":null},\"Shift\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"period\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"schedules\",\"kind\":\"object\",\"type\":\"WorkSchedule\",\"relationName\":\"ShiftToWorkSchedule\"}],\"dbName\":null},\"WorkSchedule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"shiftId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"doctor\",\"kind\":\"object\",\"type\":\"DoctorInfo\",\"relationName\":\"DoctorInfoToWorkSchedule\"},{\"name\":\"shift\",\"kind\":\"object\",\"type\":\"Shift\",\"relationName\":\"ShiftToWorkSchedule\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToWorkSchedule\"}],\"dbName\":null},\"Appointment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"patientId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"scheduleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"symptom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"request\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"patient\",\"kind\":\"object\",\"type\":\"PatientInfo\",\"relationName\":\"AppointmentToPatientInfo\"},{\"name\":\"schedule\",\"kind\":\"object\",\"type\":\"WorkSchedule\",\"relationName\":\"AppointmentToWorkSchedule\"},{\"name\":\"record\",\"kind\":\"object\",\"type\":\"MedicalRecord\",\"relationName\":\"AppointmentToMedicalRecord\"}],\"dbName\":null},\"MedicalRecord\":{\"fields\":[{\"name\":\"appointmentId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"diagnosis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prescription\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"appointment\",\"kind\":\"object\",\"type\":\"Appointment\",\"relationName\":\"AppointmentToMedicalRecord\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

